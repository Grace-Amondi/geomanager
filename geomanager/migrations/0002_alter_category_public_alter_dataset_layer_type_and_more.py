# Generated by Django 4.2.1 on 2023-05-29 07:49

import django.core.validators
from django.db import migrations, models
import wagtail.blocks
import wagtail.fields
import wagtail_color_panel.blocks
import wagtailiconchooser.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('geomanager', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='category',
            name='public',
            field=models.BooleanField(default=True, help_text='Is the category public ?', verbose_name='public'),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='layer_type',
            field=models.CharField(choices=[('file', 'Raster'), ('wms', 'WMS'), ('vector', 'Vector')], default='file', max_length=100, verbose_name='layer_type'),
        ),
        migrations.AlterField(
            model_name='vectorlayer',
            name='render_layers',
            field=wagtail.fields.StreamField([('fill', wagtail.blocks.StructBlock([('paint', wagtail.blocks.StructBlock([('fill_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', label='fill color', required=False)), ('fill_opacity', wagtail.blocks.FloatBlock(default=1.0, label='fill opacity', required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])), ('fill_outline_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', label='fill outline color', required=False)), ('fill_antialias', wagtail.blocks.BooleanBlock(default=True, label='fill antialias', required=False))], label='Paint Properties')), ('filter', wagtail.blocks.CharBlock(label='filter', required=False)), ('maxzoom', wagtail.blocks.IntegerBlock(label='maxzoom', required=False)), ('minzoom', wagtail.blocks.IntegerBlock(label='minzoom', required=False))], label='Polygon Layer')), ('line', wagtail.blocks.StructBlock([('paint', wagtail.blocks.StructBlock([('line_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', label='Line color', required=False)), ('line_dasharray', wagtail.blocks.CharBlock(label='Line dasharray', required=False)), ('line_gap_width', wagtail.blocks.FloatBlock(default=0.0, label='Line gap width', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('line_opacity', wagtail.blocks.FloatBlock(default=1.0, label='line opacity', required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])), ('line_width', wagtail.blocks.FloatBlock(default=1.0, label='Line width', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('line_offset', wagtail.blocks.FloatBlock(default=0, label='Line offset', required=False, validators=[django.core.validators.MinValueValidator(0)]))], label='Paint Properties')), ('layout', wagtail.blocks.StructBlock([('line_cap', wagtail.blocks.ChoiceBlock(choices=[('butt', 'Butt'), ('round', 'Round'), ('square', 'Square')], label='Line cap', required=False)), ('line_join', wagtail.blocks.ChoiceBlock(choices=[('miter', 'Miter'), ('bevel', 'Bevel'), ('round', 'Round')], label='Line join', required=False)), ('line_miter_limit', wagtail.blocks.FloatBlock(default=2.0, label='line miter limit', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('line_round_limit', wagtail.blocks.FloatBlock(default=1.05, label='line round limit', required=False, validators=[django.core.validators.MinValueValidator(0)]))], label='Layout Properties')), ('filter', wagtail.blocks.CharBlock(label='filter', required=False)), ('maxzoom', wagtail.blocks.IntegerBlock(label='maxzoom', required=False)), ('minzoom', wagtail.blocks.IntegerBlock(label='minzoom', required=False))], label='Line Layer')), ('circle', wagtail.blocks.StructBlock([('paint', wagtail.blocks.StructBlock([('circle_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', label='circle color', required=False)), ('circle_opacity', wagtail.blocks.FloatBlock(default=1.0, label='circle opacity', required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])), ('circle_radius', wagtail.blocks.FloatBlock(default=5.0, label='circle radius', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('circle_stroke_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', label='circle stroke color', required=False)), ('circle_stroke_width', wagtail.blocks.FloatBlock(default=0.0, label='circle_stroke_width', required=False, validators=[django.core.validators.MinValueValidator(0)]))], label='Paint Properties')), ('filter', wagtail.blocks.CharBlock(label='filter', required=False)), ('maxzoom', wagtail.blocks.IntegerBlock(label='maxzoom', required=False)), ('minzoom', wagtail.blocks.IntegerBlock(label='minzoom', required=False))], label='Point Layer')), ('icon', wagtail.blocks.StructBlock([('layout', wagtail.blocks.StructBlock([('icon_image', wagtailiconchooser.blocks.IconChooserBlock(label='Icon Image')), ('icon_allow_overlap', wagtail.blocks.BooleanBlock(default=False, label='Icon allow overlap', required=False)), ('icon_anchor', wagtail.blocks.ChoiceBlock(choices=[('center', 'Center'), ('left', 'Left'), ('right', 'Right'), ('top', 'Top'), ('bottom', 'Bottom'), ('top-left', 'Top Left'), ('top-right', 'Top Right'), ('bottom-left', 'Bottom Left'), ('bottom-right', 'Bottom Right')], label='Icon anchor', required=False)), ('icon_ignore_placement', wagtail.blocks.BooleanBlock(default=False, label='Icon ignore placement', required=False)), ('icon_keep_upright', wagtail.blocks.BooleanBlock(default=False, label='Icon keep upright', required=False)), ('icon_offset', wagtail.blocks.CharBlock(label='Icon offset', required=False)), ('icon_optional', wagtail.blocks.BooleanBlock(default=False, label='Icon optional', required=False)), ('icon_padding', wagtail.blocks.FloatBlock(default=2.0, label='Icon padding', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('icon_pitch_alignment', wagtail.blocks.ChoiceBlock(choices=[('auto', 'Auto'), ('map', 'Map'), ('viewport', 'Viewport')], label='Icon pitch alignment', required=False)), ('icon_rotate', wagtail.blocks.IntegerBlock(default=0, label='icon rotate', required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)])), ('icon_rotation_alignment', wagtail.blocks.ChoiceBlock(choices=[('auto', 'Auto'), ('map', 'Map'), ('viewport', 'Viewport')], label='Icon rotation alignment', required=False)), ('icon_size', wagtail.blocks.FloatBlock(default=1, label='icon size', required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])), ('icon_text_fit', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('width', 'Width'), ('height', 'Height'), ('both', 'Both')], label='Icon text fit', required=False))], label='Layout Properties')), ('paint', wagtail.blocks.StructBlock([('icon_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', label='Icon color', required=False)), ('icon_halo_blur', wagtail.blocks.FloatBlock(default=0.0, label='Icon halo blur', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('icon_halo_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', label='Icon halo color', required=False)), ('icon_halo_width', wagtail.blocks.FloatBlock(default=0.0, label='icon halo width', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('icon_opacity', wagtail.blocks.FloatBlock(default=1.0, label='icon opacity', required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)]))], label='Paint Properties'))], label='Icon Layer')), ('text', wagtail.blocks.StructBlock([('paint', wagtail.blocks.StructBlock([('text_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', label='Text color', required=False)), ('text_halo_blur', wagtail.blocks.FloatBlock(default=0.0, label='Text halo blur', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('text_halo_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', label='Text halo color', required=False)), ('text_halo_width', wagtail.blocks.FloatBlock(default=0.0, label='text halo width', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('text_translate', wagtail.blocks.CharBlock(label='Text translate', required=False)), ('text_translate_anchor', wagtail.blocks.ChoiceBlock(choices=[('map', 'Map'), ('viewport', 'Viewport')], label='Text translate anchor', required=False))], label='Paint Properties')), ('layout', wagtail.blocks.StructBlock([('symbol_placement', wagtail.blocks.ChoiceBlock(choices=[('point', 'Point'), ('line', 'Line'), ('line-center', 'Line Center')], label='Text Placement', required=False)), ('text_allow_overlap', wagtail.blocks.BooleanBlock(default=False, label='Text allow overlap', required=False)), ('text_anchor', wagtail.blocks.ChoiceBlock(choices=[('center', 'Center'), ('left', 'Left'), ('right', 'Right'), ('top', 'Top'), ('bottom', 'Bottom'), ('top-left', 'Top Left'), ('top-right', 'Top Right'), ('bottom-left', 'Bottom Left'), ('bottom-right', 'Bottom Right')], label='Text anchor', required=False)), ('text_field', wagtail.blocks.CharBlock(label='Text field')), ('text_size', wagtail.blocks.IntegerBlock(default=16, label='Text size', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('text_transform', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('uppercase', 'Uppercase'), ('lowercase', 'Lowercase')], label='Text transform', required=False)), ('text_ignore_placement', wagtail.blocks.BooleanBlock(default=False, label='Text ignore placement', required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('center', 'Center'), ('left', 'Left'), ('right', 'Right'), ('auto', 'Auto')], label='Text justify', required=False)), ('text_keep_upright', wagtail.blocks.BooleanBlock(default=False, label='Text keep upright', required=False)), ('text_letter_spacing', wagtail.blocks.FloatBlock(default=0.0, label='Text letter spacing', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('text_line_height', wagtail.blocks.FloatBlock(default=1.2, label='Text line height', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('text_max_angle', wagtail.blocks.IntegerBlock(default=45, label='Text max angle', required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)])), ('text_max_width', wagtail.blocks.IntegerBlock(default=10, label='Text max width', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('text_offset', wagtail.blocks.CharBlock(label='Text offset', required=False)), ('text_opacity', wagtail.blocks.FloatBlock(default=1.0, label='text opacity', required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])), ('text_padding', wagtail.blocks.IntegerBlock(default=2, label='Text  padding', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('text_pitch_alignment', wagtail.blocks.ChoiceBlock(choices=[('auto', 'Auto'), ('map', 'Map'), ('viewport', 'Viewport')], label='Text pitch alignment', required=False)), ('text_radial_offset', wagtail.blocks.IntegerBlock(default=0, label='Text radial offset', required=False, validators=[django.core.validators.MinValueValidator(0)])), ('text_rotate', wagtail.blocks.IntegerBlock(default=0, label='Text rotate', required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)])), ('text_rotation_alignment', wagtail.blocks.ChoiceBlock(choices=[('auto', 'Auto'), ('map', 'Map'), ('viewport', 'Viewport')], label='Text rotation alignment', required=False)), ('text_variable_anchor', wagtail.blocks.ChoiceBlock(choices=[('center', 'Center'), ('left', 'Left'), ('right', 'Right'), ('top', 'Top'), ('bottom', 'Bottom'), ('top-left', 'Top Left'), ('top-right', 'Top Right'), ('bottom-left', 'Bottom Left'), ('bottom-right', 'Bottom Right')], label='Text variable anchor', required=False))], label='Layout Properties'))], label='Text Label Layer'))], blank=True, null=True, use_json_field=True, verbose_name='Render Layers'),
        ),
    ]
