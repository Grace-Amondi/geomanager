# Generated by Django 4.2.1 on 2023-06-01 09:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('geomanager', '0008_alter_fileimagelayer_analysis'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeoManagerUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=50, verbose_name='Gender')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Country')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('sector', models.CharField(max_length=255, verbose_name='Sector')),
                ('organization', models.CharField(max_length=255, verbose_name='Organization')),
                ('organization_type', models.CharField(max_length=255, verbose_name='Organization Type')),
                ('scale_of_operations', models.CharField(max_length=255, verbose_name='Scale of Operations')),
                ('position', models.CharField(max_length=255, verbose_name='Position')),
                ('how_do_you_use', models.CharField(blank=True, max_length=255, null=True, verbose_name='How do you Use')),
                ('interests', models.CharField(blank=True, max_length=255, null=True, verbose_name='Interests')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.AlterField(
            model_name='fileimagelayer',
            name='analysis',
            field=wagtail.fields.StreamField([('point_analysis', wagtail.blocks.StructBlock([('instance_data_enabled', wagtail.blocks.BooleanBlock(default=True, label='Show data for point', required=False)), ('timeseries_data_enabled', wagtail.blocks.BooleanBlock(default=True, label='Show timeseries data for point', required=False)), ('unit', wagtail.blocks.CharBlock(label='Data unit', required=False))], label='Point Analysis')), ('area_analysis', wagtail.blocks.StructBlock([('instance_data_enabled', wagtail.blocks.BooleanBlock(default=True, label='Show data for area', required=False)), ('instance_value_type', wagtail.blocks.ChoiceBlock(choices=[('mean', 'Mean of pixel values'), ('sum', 'Sum of pixel values'), ('minmax', 'Minimum, Maximum pixel values'), ('minmeanmax', 'Minimum, Mean, Maximum pixel values')], help_text='The value type that should be displayed', label='Area value type')), ('timeseries_data_enabled', wagtail.blocks.BooleanBlock(default=True, label='Show timeseries data for area', required=False)), ('timeseries_aggregation_method', wagtail.blocks.ChoiceBlock(choices=[('mean', 'By Mean'), ('sum', 'By Sum')], help_text='How should the region data be aggregated ?', label='Area timeseries data aggregation Method')), ('unit', wagtail.blocks.CharBlock(label='Data unit', required=False))], label='Area Analysis'))], blank=True, null=True, use_json_field=True, verbose_name='Analysis'),
        ),
        migrations.DeleteModel(
            name='GeoManagerUser',
        ),
    ]
